<%- include('../_partials/header') %>

<div class="dashboard-container">
    <%- include('../_partials/sidebar') %>

    <main id="main-content">
        <%- include('../_partials/sub_header') %>
        <%- include('../_partials/notificaciones') %>
    
        <div class="main-content">
            <h2 class="section-title">Gestión de Servicios</h2>
            
            <div class="controls-container">  
                <div class="search-container">
                    <i class="fas fa-search search-icon"></i>
                    <input type="text" id="searchInput" placeholder="Buscar servicios..." class="search-input">
                </div>
                <button id="btnAgregarServicio" class="btn btn-primary">
                    <i class="fas fa-plus-circle"></i> Añadir Servicio
                </button>
            </div>

            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Nombre</th>
                            <th>Tipo</th>
                            <th>Costo</th>
                            <th>Tiempo Procedimiento</th>
                            <th>Tiempo Recuperación</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="tablaServicios">
                        <!-- Los servicios se insertarán aquí dinámicamente -->
                    </tbody>
                </table>
            </div>
        </div>
    </main>
</div>

<!-- Modal para añadir/editar servicio -->
<div id="modalServicio" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2 id="modalTitle">Añadir Servicio</h2>
        <form id="formServicio">
            <div class="form-group">
                <label for="nombre">Nombre del Servicio</label>
                <input type="text" id="nombre" name="nombre" required class="form-control">
            </div>
            <div class="form-group">
                <label for="tipoProcedimiento">Tipo de Procedimiento</label>
                <select id="tipoProcedimiento" name="tipoProcedimiento" required class="form-control">
                    <option value="">Seleccione el tipo</option>
                    <option value="Consulta">Consulta</option>
                    <option value="Cirugía">Cirugía</option>
                </select>
            </div>
            <div class="form-group">
                <label for="costo">Costo</label>
                <input type="number" id="costo" name="costo" required class="form-control">
            </div>
            <div class="form-group">
                <label for="tiempoEstimadoProcedimiento">Tiempo Estimado de Procedimiento</label>
                <input type="text" id="tiempoEstimadoProcedimiento" name="tiempoEstimadoProcedimiento" required class="form-control">
            </div>
            <div class="form-group">
                <label for="tiempoEstimadoRecuperacion">Tiempo Estimado de Recuperación</label>
                <input type="text" id="tiempoEstimadoRecuperacion" name="tiempoEstimadoRecuperacion" required class="form-control">
            </div>
            <button type="submit" class="btn btn-success">Guardar</button>
        </form>
    </div>
</div>

<style>
.table-responsive {
    overflow-x: auto;
}
.table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
}
.table th,
.table td {
    padding: 12px;
    text-align: left;
    border-bottom: 1px solid #e0e0e0;
}
.table th {
    background-color: #579dcc;
    font-weight: bold;
    color: white;
}
.table tbody tr:hover {
    background-color: #f5f5f5;
}
.btn {
    padding: 8px 16px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    margin: 0 2px;
    transition: all 0.2s ease-in-out; /* Transición para el efecto */
}
.btn:hover {
    transform: scale(1.05); /* Aumenta el tamaño en un 5% */
    filter: brightness(0.9); /* Oscurece ligeramente el botón */
}
.btn-primary {
    background-color: #28a745;
    color: white;
}
.btn-success {
    background-color: #28a745;
    color: white;
}
.btn-info {
    background-color: #17a2b8;
    color: white;
}
.btn-danger {
    background-color: #dc3545;
    color: white;
}
.btn-sm {
    padding: 4px 8px;
    font-size: 0.875rem;
}
.search-input {
    padding: 8px 12px;
    border: 1px solid #ced4da;
    border-radius: 4px;
    width: 200px;
}
.modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.4);
}
.modal.show {
    display: block;
}
.modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 500px;
    border-radius: 8px;
}
.close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
}
.form-group {
    margin-bottom: 15px;
}
.form-control {
    width: 100%;
    padding: 8px;
    border: 1px solid #ced4da;
    border-radius: 4px;
}
.edit-button {
    background-color: #28a745;
    color: white;
}
.delete-button {
    background-color: #dc3545;
    color: white;
}

</style>

<script>
    // Datos de ejemplo
    let servicios = [
        { id: 1, nombre: "Consulta General", tipo: "Consulta", costo: 50, tiempoProcedimiento: "30 minutos", tiempoRecuperacion: "Inmediato" },
        { id: 2, nombre: "Biopsias", tipo: "Cirugía", costo: 200, tiempoProcedimiento: "30 minutos", tiempoRecuperacion: "5 días" },
    ];

    // Elementos del DOM
    const tablaServicios = document.getElementById('tablaServicios');
    const btnAgregarServicio = document.getElementById('btnAgregarServicio');
    const modal = document.getElementById('modalServicio');
    const closeModal = document.querySelector('.close');
    const formServicio = document.getElementById('formServicio');
    const modalTitle = document.getElementById('modalTitle');
    const searchInput = document.getElementById('searchInput');

    // Función para renderizar la tabla de servicios
    function renderizarTabla(serviciosArray) {
        tablaServicios.innerHTML = '';
        serviciosArray.forEach(servicio => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${servicio.nombre}</td>
                <td>${servicio.tipo}</td>
                <td>S/. ${servicio.costo}</td>
                <td>${servicio.tiempoProcedimiento}</td>
                <td>${servicio.tiempoRecuperacion}</td>
                <td>
                    <button class="btn btn-info btn-sm view-button" data-id="${servicio.id}">
                        <i class="fas fa-eye"></i> Ver
                    </button>
                    <button class="btn btn-warning btn-sm edit-button" data-id="${servicio.id}">
                        <i class="fas fa-edit"></i> Editar
                    </button>
                    <button class="btn btn-danger btn-sm delete-button" data-id="${servicio.id}">
                        <i class="fas fa-trash-alt"></i> Eliminar
                    </button>
                </td>
            `;
            tablaServicios.appendChild(row);
        });
    }

    // Función para ver un servicio
    function verServicio(id) {
        const servicio = servicios.find(s => s.id === id);
        if (servicio) {
            alert(`
                Detalles del Servicio:
                Nombre: ${servicio.nombre}
                Tipo: ${servicio.tipo}
                Costo: S/. ${servicio.costo}
                Tiempo de Procedimiento: ${servicio.tiempoProcedimiento}
                Tiempo de Recuperación: ${servicio.tiempoRecuperacion}
            `);
        }
    }

    // Inicializar la tabla
    renderizarTabla(servicios);

    // Evento para abrir el modal de agregar servicio
    btnAgregarServicio.addEventListener('click', () => {
        modalTitle.textContent = 'Añadir Servicio';
        formServicio.reset();
        modal.classList.add('show');
    });

    // Evento para cerrar el modal
    closeModal.addEventListener('click', () => {
        modal.classList.remove('show');
    });

    // Evento para manejar el envío del formulario
    formServicio.addEventListener('submit', (e) => {
        e.preventDefault();
        const formData = new FormData(formServicio);
        const nuevoServicio = {
            id: Date.now(),
            nombre: formData.get('nombre'),
            tipo: formData.get('tipoProcedimiento'),
            costo: parseFloat(formData.get('costo')),
            tiempoProcedimiento: formData.get('tiempoEstimadoProcedimiento'),
            tiempoRecuperacion: formData.get('tiempoEstimadoRecuperacion')
        };

        if (formServicio.dataset.editId) {
            const index = servicios.findIndex(s => s.id === parseInt(formServicio.dataset.editId));
            if (index !== -1) {
                servicios[index] = { ...servicios[index], ...nuevoServicio };
            }
            delete formServicio.dataset.editId;
        } else {
            servicios.push(nuevoServicio);
        }

        renderizarTabla(servicios);
        modal.classList.remove('show');
    });

    // Evento para editar, eliminar o ver servicios
    tablaServicios.addEventListener('click', (e) => {
        if (e.target.classList.contains('view-button') || e.target.closest('.view-button')) {
            const id = parseInt(e.target.dataset.id || e.target.closest('.view-button').dataset.id);
            verServicio(id);
        } else if (e.target.classList.contains('edit-button') || e.target.closest('.edit-button')) {
            const id = parseInt(e.target.dataset.id || e.target.closest('.edit-button').dataset.id);
            const servicio = servicios.find(s => s.id === id);
            if (servicio) {
                modalTitle.textContent = 'Editar Servicio';
                formServicio.nombre.value = servicio.nombre;
                formServicio.tipoProcedimiento.value = servicio.tipo;
                formServicio.costo.value = servicio.costo;
                formServicio.tiempoEstimadoProcedimiento.value = servicio.tiempoProcedimiento;
                formServicio.tiempoEstimadoRecuperacion.value = servicio.tiempoRecuperacion;
                formServicio.dataset.editId = id;
                modal.classList.add('show');
            }
        } else if (e.target.classList.contains('delete-button') || e.target.closest('.delete-button')) {
            const id = parseInt(e.target.dataset.id || e.target.closest('.delete-button').dataset.id);
            if (confirm('¿Estás seguro de que quieres eliminar este servicio?')) {
                servicios = servicios.filter(s => s.id !== id);
                renderizarTabla(servicios);
            }
        }
    });

    // Evento para buscar servicios
    searchInput.addEventListener('input', (e) => {
        const searchTerm = e.target.value.toLowerCase();
        const serviciosFiltrados = servicios.filter(servicio => 
            servicio.nombre.toLowerCase().includes(searchTerm) ||
            servicio.tipo.toLowerCase().includes(searchTerm)
        );
        renderizarTabla(serviciosFiltrados);
    });

    // Cerrar el modal si se hace clic fuera de él
    window.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.classList.remove('show');
        }
    });
</script>

<%- include('../_partials/footer') %>