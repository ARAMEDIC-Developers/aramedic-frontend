<%- include('../_partials/header') %>

<div class="dashboard-container">
    <%- include('../_partials/sidebar') %>

    <!-- Contenido Principal -->
    <main id="main-content">
        <%- include('../_partials/sub_header') %>
        <%- include('../_partials/notificaciones') %>

        <section id="usuarios">
            <h2 class="section-title">Listado de Usuarios</h2>

            <!-- Barra de búsqueda -->
            <div class="search-container">
                <i class="fas fa-search search-icon"></i>
                <input type="text" id="searchInput" placeholder="NOMBRE">
            </div>

            <!-- Botón para agregar usuario -->
            <button id="btnAgregarUsuario" class="add-button">
                <i class="fas fa-plus-circle"></i> Agregar Usuario
            </button>

            <!-- Tabla de Usuarios -->
            <table id="usuarios-table" style="width: 100%; border-collapse: collapse; margin-top: 20px;">
                <thead style="background-color: #007BFF; color: white;">
                    <tr>
                        <th style="padding: 10px; text-align: left;">ID</th>
                        <th style="padding: 10px; text-align: left;">Nombre de Usuario</th>
                        <th style="padding: 10px; text-align: left;">Contraseña</th>
                        <th style="padding: 10px; text-align: left;">Rol</th>
                        <th style="padding: 10px; text-align: left;">Paciente ID</th>
                        <th style="padding: 10px; text-align: left;">Médico ID</th>
                        <th style="padding: 10px; text-align: left;">Administrador ID</th>
                        <th style="padding: 10px; text-align: left;">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Filas de usuarios generadas dinámicamente con JavaScript -->
                </tbody>
            </table>
        </section>
    </main>
</div>

<!-- Modal para añadir/editar usuario -->
<div id="modalUsuario" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2 id="modalTitle">Agregar Usuario</h2>
        <form id="formUsuario">
            <div class="form-group">
                <label for="nombreUsuario">Nombre de Usuario</label>
                <input type="text" id="nombreUsuario" name="nombreUsuario" required>
            </div>
            <div class="form-group">
                <label for="contrasena">Contraseña</label>
                <div style="position: relative;">
                    <input type="password" id="contrasena" name="contrasena" required style="padding-right: 30px;">
                    <i class="fas fa-eye toggle-password" id="togglePassword" style="position: absolute; right: 10px; top: 50%; transform: translateY(-50%); cursor: pointer;"></i>
                </div>
            </div>
            <div class="form-group">
                <label for="rol">Rol</label>
                <select id="rol" name="rol" required>
                    <option value="paciente">Paciente</option>
                    <option value="medico">Médico</option>
                    <option value="admin">Administrador</option>
                </select>
            </div>
            <div class="form-group">
                <label for="pacienteId">Paciente ID</label>
                <input type="number" id="pacienteId" name="pacienteId">
            </div>
            <div class="form-group">
                <label for="medicoId">Médico ID</label>
                <input type="number" id="medicoId" name="medicoId">
            </div>
            <div class="form-group">
                <label for="administradorId">Administrador ID</label>
                <input type="number" id="administradorId" name="administradorId">
            </div>
            <button type="submit" class="btn-guardar">Guardar</button>
        </form>
    </div>
</div>

<script>
    let usuarios = [
        { id: 1, nombreUsuario: "juan_paciente", contrasena: "contrasena_segura123", rol: "paciente", pacienteId: 1, medicoId: null, administradorId: null },
        { id: 2, nombreUsuario: "dr.juarez", contrasena: "contrasena_segura456", rol: "medico", pacienteId: null, medicoId: 2, administradorId: null },
        { id: 3, nombreUsuario: "admin", contrasena: "contrasena_segura789", rol: "admin", pacienteId: null, medicoId: null, administradorId: 3 }
    ];

    const tableBody = document.querySelector("#usuarios-table tbody");
    const searchInput = document.getElementById('searchInput');
    const btnAgregarUsuario = document.getElementById('btnAgregarUsuario');
    const modal = document.getElementById('modalUsuario');
    const closeModal = document.querySelector('.close');
    const formUsuario = document.getElementById('formUsuario');
    const modalTitle = document.getElementById('modalTitle');
    const togglePassword = document.getElementById('togglePassword');
    const passwordField = document.getElementById('contrasena');

    // Alternar visibilidad de la contraseña
    togglePassword.addEventListener('click', () => {
        if (passwordField.type === 'password') {
            passwordField.type = 'text';
            togglePassword.classList.remove('fa-eye');
            togglePassword.classList.add('fa-eye-slash');
        } else {
            passwordField.type = 'password';
            togglePassword.classList.remove('fa-eye-slash');
            togglePassword.classList.add('fa-eye');
        }
    });

    // Renderizar la tabla de usuarios con contraseña oculta
    function renderTable(data) {
        tableBody.innerHTML = "";
        data.forEach(usuario => {
            const row = `
                <tr style="border-bottom: 1px solid #ddd;">
                    <td style="padding: 10px;">${usuario.id}</td>
                    <td style="padding: 10px;">${usuario.nombreUsuario}</td>
                    <td style="padding: 10px;">********</td>
                    <td style="padding: 10px;">${usuario.rol}</td>
                    <td style="padding: 10px;">${usuario.pacienteId ?? '-'}</td>
                    <td style="padding: 10px;">${usuario.medicoId ?? '-'}</td>
                    <td style="padding: 10px;">${usuario.administradorId ?? '-'}</td>
                    <td style="padding: 10px;">
                        <button onclick="editarUsuario(${usuario.id})" style="background-color: #28a745; color: white; border: none; padding: 10px 10px; cursor: pointer; margin-right: 5px;"class="edit-button">Editar</button>
                        <button onclick="eliminarUsuario(${usuario.id})" style="background-color: #dc3545; color: white; border: none; padding: 10px 10px; cursor: pointer;"class="delete-button">Eliminar</button>
                    </td>
                </tr>
            `;
            tableBody.insertAdjacentHTML('beforeend', row);
        });
    }

    renderTable(usuarios);

    btnAgregarUsuario.addEventListener('click', () => {
        modalTitle.textContent = 'Agregar Usuario';
        formUsuario.reset();
        delete formUsuario.dataset.editId;
        modal.classList.add('show');
    });

    closeModal.addEventListener('click', () => {
        modal.classList.remove('show');
    });

    formUsuario.addEventListener('submit', (e) => {
        e.preventDefault();
        const formData = new FormData(formUsuario);
        
        // Obtener el próximo ID basado en el máximo ID actual en la lista
        const newId = usuarios.length > 0 ? Math.max(...usuarios.map(u => u.id)) + 1 : 1;
        
        const nuevoUsuario = {
            id: newId,
            nombreUsuario: formData.get('nombreUsuario'),
            contrasena: formData.get('contrasena'),
            rol: formData.get('rol'),
            pacienteId: formData.get('pacienteId') || null,
            medicoId: formData.get('medicoId') || null,
            administradorId: formData.get('administradorId') || null
        };

        if (formUsuario.dataset.editId) {
            const index = usuarios.findIndex(u => u.id === parseInt(formUsuario.dataset.editId));
            if (index !== -1) {
                usuarios[index] = { ...usuarios[index], ...nuevoUsuario };
            }
            delete formUsuario.dataset.editId;
        } else {
            usuarios.push(nuevoUsuario);
        }

        renderTable(usuarios);
        modal.classList.remove('show');
    });

    function editarUsuario(id) {
        const usuario = usuarios.find(u => u.id === id);
        if (usuario) {
            modalTitle.textContent = 'Editar Usuario';
            formUsuario.nombreUsuario.value = usuario.nombreUsuario;
            formUsuario.contrasena.value = usuario.contrasena;
            formUsuario.rol.value = usuario.rol;
            formUsuario.pacienteId.value = usuario.pacienteId || '';
            formUsuario.medicoId.value = usuario.medicoId || '';
            formUsuario.administradorId.value = usuario.administradorId || '';
            formUsuario.dataset.editId = id;
            modal.classList.add('show');
        }
    }

    function eliminarUsuario(id) {
        usuarios = usuarios.filter(u => u.id !== id);
        renderTable(usuarios);
    }

    searchInput.addEventListener('input', (e) => {
        const searchTerm = e.target.value.toLowerCase();
        const filteredUsuarios = usuarios.filter(usuario =>
            usuario.nombreUsuario.toLowerCase().includes(searchTerm) ||
            usuario.rol.toLowerCase().includes(searchTerm)
        );
        renderTable(filteredUsuarios);
    });
</script>

<%- include('../_partials/footer') %>
