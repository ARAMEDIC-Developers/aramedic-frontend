<%- include('../_partials/header') %>

<div class="dashboard-container">
    <%- include('../_partials/sidebar') %>

    <!-- Contenido Principal -->
    <main id="main-content">
        <%- include('../_partials/sub_header') %>
        <%- include('../_partials/notificaciones') %>

        <section id="usuarios">
            <h2 class="section-title">Listado de Usuarios</h2>

            <!-- Barra de búsqueda -->
            <div class="search-container">
                <i class="fas fa-search search-icon"></i>
                <input type="text" id="searchInput" placeholder="Buscar por DNI">
            </div>

            <!-- Botones para agregar Paciente y Trabajador -->
            <button id="btnAgregarPaciente" class="add-button">
                <i class="fas fa-plus-circle"></i> Agregar Paciente
            </button>
            <button id="btnAgregarTrabajador" class="add-button">
                <i class="fas fa-plus-circle"></i> Agregar Trabajador
            </button>

            <!-- Tabla de Usuarios -->
            <table id="usuarios-table" style="width: 100%; border-collapse: collapse; margin-top: 20px;">
                <thead style="background-color: #007BFF; color: white;">
                    <tr>
                        <th style="padding: 10px; text-align: left;">DNI</th>
                        <th style="padding: 10px; text-align: left;">Nombre</th>
                        <th style="padding: 10px; text-align: left;">Apellido</th>
                        <th style="padding: 10px; text-align: left;">Email</th>
                        <th style="padding: 10px; text-align: left;">Rol</th>
                        <th style="padding: 10px; text-align: left;">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    <% usuarios.forEach(usuario => { %>
                        <tr>
                            <td style="padding: 10px;"><%= usuario.dni %></td>
                            <td style="padding: 10px;"><%= usuario.nombre || 'N/A' %></td>
                            <td style="padding: 10px;"><%= usuario.apellido || 'N/A' %></td>
                            <td style="padding: 10px;"><%= usuario.email || 'N/A' %></td>
                            <td style="padding: 10px;">
                                <% if (usuario.rol_id === 1) { %>
                                    Paciente
                                <% } else if (usuario.rol_id === 2) { %>
                                    Medico
                                <% } else if (usuario.rol_id === 3) { %>
                                    Administrador
                                <% } else { %>
                                    Desconocido
                                <% } %>
                            </td>
                            <td style="padding: 10px;">
                                <button 
                                    class="edit-button" 
                                    style="background-color: #28a745; color: white; border: none; padding: 5px 10px; cursor: pointer; margin-right: 5px;">
                                    Editar
                                </button>
                                <button 
                                    class="delete-button" 
                                    style="background-color: #dc3545; color: white; border: none; padding: 5px 10px; cursor: pointer;">
                                    Eliminar
                                </button>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </section>
    </main>
</div>

<!-- Modal para añadir Usuario -->
<div id="modalUsuario" class="modal">
    <div class="modal-content">
        <span id="cerrarModal" class="close">&times;</span>
        <h2 id="modalTitle">Agregar Usuario</h2>
        <form id="formUsuario">
            <div class="form-group">
                <label for="dniUsuario">DNI</label>
                <input type="text" id="dniUsuario" name="dniUsuario" required>
            </div>
            <div class="form-group">
                <label for="nombreUsuario">Nombre</label>
                <input type="text" id="nombreUsuario" name="nombreUsuario" required>
            </div>
            <div class="form-group">
                <label for="apellidoUsuario">Apellido</label>
                <input type="text" id="apellidoUsuario" name="apellidoUsuario" required>
            </div>
            <div class="form-group">
                <label for="emailUsuario">Email</label>
                <input type="email" id="emailUsuario" name="emailUsuario" required>
            </div>
            <div class="form-group">
                <label for="rol">Rol</label>
                <select id="rol" name="rol" required></select>
            </div>
            <div class="form-group">
                <label for="contraseñaUsuario">Contraseña</label>
                <input type="password" id="contraseñaUsuario" name="contraseñaUsuario" required>
            </div>
            <div class="form-group">
                <label for="repetirContraseñaUsuario">Repetir Contraseña</label>
                <input type="password" id="repetirContraseñaUsuario" name="repetirContraseñaUsuario" required>
            </div>
            <button type="submit" id="botonGuardar" class="btn-guardar">Guardar</button>
        </form>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
    const usuariosTableBody = document.querySelector("#usuarios-table tbody");
    const searchInput = document.getElementById("searchInput");
    const btnAgregarPaciente = document.getElementById("btnAgregarPaciente");
    const btnAgregarTrabajador = document.getElementById("btnAgregarTrabajador");
    const modalUsuario = document.getElementById("modalUsuario");
    const cerrarModal = document.getElementById("cerrarModal");
    const modalTitle = document.getElementById("modalTitle");
    const formUsuario = document.getElementById("formUsuario");
    const rolSelect = document.getElementById("rol");

    // Función para actualizar las opciones del select según el tipo de usuario
    function actualizarOpcionesRol(opciones) {
        rolSelect.innerHTML = ""; // Limpiar opciones anteriores
        opciones.forEach(opcion => {
            const optionElement = document.createElement("option");
            optionElement.value = opcion.value;
            optionElement.textContent = opcion.text;
            rolSelect.appendChild(optionElement);
        });
    }

    // Mostrar el modal para agregar paciente
    btnAgregarPaciente.addEventListener("click", () => {
        modalTitle.textContent = "Agregar Paciente";
        formUsuario.reset(); // Resetea los campos del formulario
        actualizarOpcionesRol([ { value: 1, text: "Paciente" } ]);
        modalUsuario.classList.add("show");
    });

    // Mostrar el modal para agregar trabajador
    btnAgregarTrabajador.addEventListener("click", () => {
        modalTitle.textContent = "Agregar Trabajador";
        formUsuario.reset(); // Resetea los campos del formulario
        actualizarOpcionesRol([ { value: 2, text: "Medico" }, { value: 3, text: "Administrador" } ]);
        modalUsuario.classList.add("show");
    });

    // Cerrar el modal al hacer clic en la 'x'
    cerrarModal.addEventListener("click", () => {
        modalUsuario.classList.remove("show");
    });

    // Cerrar el modal al hacer clic fuera del contenido del modal
    window.addEventListener("click", (event) => {
        if (event.target === modalUsuario) {
            modalUsuario.classList.remove("show");
        }
    });

    // Enviar los datos del formulario al servidor cuando se presione "Guardar"
    formUsuario.addEventListener("submit", async (e) => {
        e.preventDefault(); // Prevenir el comportamiento por defecto

        const dni = document.getElementById("dniUsuario").value;
        const nombre = document.getElementById("nombreUsuario").value;
        const apellido = document.getElementById("apellidoUsuario").value;
        const email = document.getElementById("emailUsuario").value;
        const rol = document.getElementById("rol").value;
        const contrasena = document.getElementById("contraseñaUsuario").value;
        const repetirContrasena = document.getElementById("repetirContraseñaUsuario").value;

        // Validar que las contraseñas coinciden
        if (contrasena !== repetirContrasena) {
            alert("Las contraseñas no coinciden");
            return;
        }

        try {
            const response = await fetch("/dashboard_jmedico/cuentas/guardar", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    dni,
                    nombre,
                    apellido,
                    email,
                    rol,
                    contrasena
                })
            });

            const result = await response.json();

            if (result.success) {
                alert("Usuario agregado exitosamente");
                modalUsuario.classList.remove("show"); // Cerrar el modal
                cargarUsuarios(); // Recargar la lista de usuarios
            } else {
                alert(result.mensaje);
            }
        } catch (error) {
            console.error("Error al guardar usuario:", error);
            alert("Error al guardar usuario");
        }
    });

    // Función para actualizar la tabla de usuarios
    function actualizarTabla(usuarios) {
        usuariosTableBody.innerHTML = ''; // Limpiar tabla

        usuarios.forEach(usuario => {
            const tr = document.createElement('tr');
            tr.innerHTML = `
                <td style="padding: 10px;">${usuario.dni}</td>
                <td style="padding: 10px;">${usuario.nombre || 'N/A'}</td>
                <td style="padding: 10px;">${usuario.apellido || 'N/A'}</td>
                <td style="padding: 10px;">${usuario.email || 'N/A'}</td>
                <td style="padding: 10px;">
                    ${usuario.rol_id === 1 ? 'Paciente' : usuario.rol_id === 2 ? 'Medico' : usuario.rol_id === 3 ? 'Administrador' : 'Desconocido'}
                </td>
                <td style="padding: 10px;">
                    <button 
                        class="edit-button" 
                        style="background-color: #28a745; color: white; border: none; padding: 5px 10px; cursor: pointer; margin-right: 5px;">
                        Editar
                    </button>
                    <button 
                        class="delete-button" 
                        style="background-color: #dc3545; color: white; border: none; padding: 5px 10px; cursor: pointer;">
                        Eliminar
                    </button>
                </td>
            `;
            usuariosTableBody.appendChild(tr);
        });
    }

    // Función para cargar usuarios al iniciar la página
    async function cargarUsuarios() {
        try {
            const response = await fetch(`/dashboard_jmedico/cuentas/buscar`);
            if (!response.ok) throw new Error('Error al cargar usuarios');

            const usuarios = await response.json();
            actualizarTabla(usuarios);
        } catch (error) {
            console.error("Error al cargar usuarios:", error);
        }
    }

    // Llamada inicial para cargar usuarios al inicio
    cargarUsuarios();
    // Lógica para buscar usuarios en tiempo real
    searchInput.addEventListener('input', async (e) => {
        const dni = e.target.value;

        try {
            const response = await fetch(`/dashboard_jmedico/cuentas/buscar?dni=${dni}`);
            if (!response.ok) throw new Error('Error al buscar cuentas');

            const usuarios = await response.json();
            actualizarTabla(usuarios);
        } catch (error) {
            console.error('Error:', error);
        }
    });
});

</script>





<%- include('../_partials/footer') %>
